{"version":3,"sources":["Components/SideBar/Button/Button.js","Components/SideBar/ProfilePicture/profilePic.jpg","Components/SideBar/ProfilePicture/ProfilePicture.js","Components/SideBar/Menu/Menu.js","Components/SideBar/SideBar.js","Components/Layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","iconshape","isSideBarOpened","faTimes","faBars","onClick","clicked","className","icon","size","color","ProfilePicture","alt","src","profilePic","Menu","state","menu","id","name","path","this","map","menuItem","exact","to","activeClassName","Component","Sidebar","sideBarStyle","React","useState","color2","style","background","Layout","openSideBar","setState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WAkBeA,EAbA,SAACC,GAGZ,IAAMC,EAAYD,EAAME,gBAAkBC,IAAUC,IAEpD,OACI,wBAAQC,QAASL,EAAMM,QAASC,UAAU,YAA1C,SACI,cAAC,IAAD,CAAiBC,KAAMP,EAAWQ,KAAO,KAAKC,MAAQ,QAAQH,UAAW,oBCZtE,G,MAAA,IAA0B,wCCa1BI,EARQ,WACnB,OACQ,qBAAKJ,UAAY,UAAjB,SACI,qBAAKK,IAAM,cAAcC,IAAOC,OCwBjCC,G,kNA1BbC,MAAQ,CACNC,KAAM,CACJ,CAAEC,GAAI,EAAGC,KAAM,OAAQC,KAAM,KAC7B,CAAEF,GAAI,EAAGC,KAAM,QAASC,KAAM,UAC9B,CAAEF,GAAI,EAAGC,KAAM,SAAUC,KAAM,WAC/B,CAAEF,GAAI,EAAGC,KAAM,WAAYC,KAAM,aACjC,CAAEF,GAAI,EAAGC,KAAM,UAAWC,KAAM,c,4CAGpC,WAAU,IAAD,OACP,OACE,oBAAIb,UAAU,OAAd,SACGc,KAAKL,MAAMC,KAAKK,KAAI,SAACC,GACpB,OACE,6BACE,cAAC,IAAD,CAASlB,QAAS,EAAKL,MAAMM,QAASkB,OAAK,EAACC,GAAIF,EAASH,KAAMM,gBAAgB,SAA/E,SACGH,EAASJ,QAFLI,EAASL,a,GAfXS,cCwBJC,G,MApBC,SAAC5B,GAGb,IAAM6B,EAAe7B,EAAME,gBAAkB,cAAgB,eAHtC,EAMG4B,IAAMC,SAAS,WANlB,mBAMhBrB,EANgB,aAOKoB,IAAMC,SAAS,YAPpB,mBAOhBC,EAPgB,UAUvB,OACI,sBAAKzB,UAAa,WAAasB,EAAcI,MAAS,CAACC,WAAY,6BAA6BxB,EAAM,KAAKsB,EAAO,KAAlH,UACI,cAAC,EAAD,CAAQ9B,gBAAiBF,EAAME,gBAAiBI,QAASN,EAAMM,UAC/D,cAAC,EAAD,IACA,cAAC,EAAD,CAAMA,QAASN,EAAMM,eCElB6B,E,4MAlBbC,YAAc,WACZ,EAAKC,SAAS,CAACnC,iBAAmB,EAAKc,MAAMd,mB,EAI/Cc,MAAQ,CACJd,iBAAiB,G,4CAIrB,WACE,OACI,cAAC,EAAD,CAASA,gBAAmBmB,KAAKL,MAAMd,gBAAiBI,QAAWe,KAAKe,kB,GAf3DT,aCYNW,E,4JATb,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,U,GANUX,aCQHY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.38aa7606.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Button = (props) => {\r\n\r\n    /* icon needs to change depending if sidebar is opened or not */\r\n    const iconshape = props.isSideBarOpened ? faTimes : faBars;\r\n    \r\n    return (\r\n        <button onClick={props.clicked} className=\"hamburger\">\r\n            <FontAwesomeIcon icon={iconshape} size = '1x' color = 'black' className =\"button-style\" />\r\n        </button>\r\n    );\r\n\r\n};\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/profilePic.55232cab.jpg\";","import React from \"react\";\r\nimport './ProfilePicture.css'\r\nimport profilePic from './profilePic.jpg';\r\n\r\n\r\nconst ProfilePicture = () =>{\r\n    return (\r\n            <div className = \"profile\">\r\n                <img alt = 'profile_pic' src = {profilePic}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePicture","  \r\nimport React, { Component } from \"react\";\r\nimport \"./Menu.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    menu: [\r\n      { id: 1, name: \"Home\", path: \"/\" },\r\n      { id: 2, name: \"About\", path: \"/about\" },\r\n      { id: 3, name: \"Resume\", path: \"/resume\" },\r\n      { id: 4, name: \"Projects\", path: \"/projects\" },\r\n      { id: 5, name: \"Contact\", path: \"/contact\" },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <ul className=\"list\">\r\n        {this.state.menu.map((menuItem) => {\r\n          return (\r\n            <li key={menuItem.id}>\r\n              <NavLink onClick={this.props.clicked} exact to={menuItem.path} activeClassName=\"active\">\r\n                {menuItem.name}\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./SideBar.css\";\r\nimport Button from \"./Button/Button\"\r\nimport ProfilePicture from \"./ProfilePicture/ProfilePicture\";\r\nimport Menu from \"./Menu/Menu\";\r\nimport BackgroundGenerator from \"./BackgroundGenerator/BackgroundGenerator\";\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n    \r\n    /* style of sidebar depends on whether its opened or not */\r\n    const sideBarStyle = props.isSideBarOpened ? \"Opensidebar\" : \"Closesidebar\"\r\n\r\n    /* variables for background generator */\r\n    const [color, setColor] = React.useState(\"#C5C1C1\");\r\n    const [color2, setColor2] = React.useState(\"#111111\");\r\n\r\n    /* sideBarStyle is applied to all components in the nav */\r\n    return (\r\n        <nav className = {\"sidebar \" + sideBarStyle} style = {{background: \"linear-gradient(to right, \"+color+\", \"+color2+\")\"}}>\r\n            <Button isSideBarOpened={props.isSideBarOpened} clicked={props.clicked} />\r\n            <ProfilePicture />\r\n            <Menu clicked={props.clicked} />\r\n        </nav>\r\n    );\r\n\r\n};\r\n\r\nexport default Sidebar;","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\n\r\nclass Layout extends Component {\r\n\r\n  /* update isSideBarOpened */\r\n  openSideBar = () => {\r\n    this.setState({isSideBarOpened : !this.state.isSideBarOpened});\r\n  };\r\n\r\n  /* defining the states of our Layout */\r\n  state = {\r\n      isSideBarOpened: false,\r\n  };\r\n\r\n  /* rendering our layout */\r\n  render() {\r\n    return (    \r\n        <SideBar isSideBarOpened = {this.state.isSideBarOpened} clicked = {this.openSideBar} />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Layout;","import React, { Component } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Layout from \"./Components/Layout/Layout\";\r\n\r\nclass App extends Component {\r\n\r\n  /* Root element wrapped in browser router. Defines the way the url is stored */\r\n  render() {\r\n    return (\r\n      <BrowserRouter> \r\n        <Layout />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}